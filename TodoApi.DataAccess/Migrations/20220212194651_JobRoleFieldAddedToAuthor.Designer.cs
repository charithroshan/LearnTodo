// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TodoApi.DataAccess;

#nullable disable

namespace TodoApi.DataAccess.Migrations
{
    [DbContext(typeof(TodoDbContext))]
    [Migration("20220212194651_JobRoleFieldAddedToAuthor")]
    partial class JobRoleFieldAddedToAuthor
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("TodoApi.Model.Todo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AuthorId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<DateTime>("Due")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.ToTable("Todos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AuthorId = 1,
                            Created = new DateTime(2022, 2, 13, 1, 16, 51, 618, DateTimeKind.Local).AddTicks(2601),
                            Description = "Learn C# from tutorial",
                            Due = new DateTime(2022, 2, 18, 1, 16, 51, 618, DateTimeKind.Local).AddTicks(2610),
                            Status = 0,
                            Title = "Learn C#"
                        },
                        new
                        {
                            Id = 2,
                            AuthorId = 1,
                            Created = new DateTime(2022, 2, 13, 1, 16, 51, 618, DateTimeKind.Local).AddTicks(2615),
                            Description = "Learn bootstrap from tutorial",
                            Due = new DateTime(2022, 2, 20, 1, 16, 51, 618, DateTimeKind.Local).AddTicks(2615),
                            Status = 0,
                            Title = "Learn bootstrap"
                        },
                        new
                        {
                            Id = 3,
                            AuthorId = 2,
                            Created = new DateTime(2022, 2, 13, 1, 16, 51, 618, DateTimeKind.Local).AddTicks(2617),
                            Description = "Learn Anguler from tutorial",
                            Due = new DateTime(2022, 2, 16, 1, 16, 51, 618, DateTimeKind.Local).AddTicks(2617),
                            Status = 0,
                            Title = "Learn Anguler"
                        });
                });

            modelBuilder.Entity("TodoApi.Models.Author", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("AddressNo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("JobRole")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.ToTable("Authors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AddressNo = "No. 100/A",
                            City = "Colombo 01",
                            FullName = "John Doe",
                            JobRole = "Developer",
                            Street = "Street 01"
                        },
                        new
                        {
                            Id = 2,
                            AddressNo = "No. 101/B",
                            City = "Colombo 02",
                            FullName = "Willim Max",
                            JobRole = "System Engineer",
                            Street = "Street 02"
                        },
                        new
                        {
                            Id = 3,
                            AddressNo = "No. 102/C",
                            City = "Colombo 03",
                            FullName = "Charith Roshan",
                            JobRole = "Developer",
                            Street = "Street 03"
                        },
                        new
                        {
                            Id = 4,
                            AddressNo = "No. 103/D",
                            City = "Colombo 04",
                            FullName = "Allon Mark ",
                            JobRole = "QA",
                            Street = "Street 04"
                        });
                });

            modelBuilder.Entity("TodoApi.Model.Todo", b =>
                {
                    b.HasOne("TodoApi.Models.Author", "Author")
                        .WithMany("Todos")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");
                });

            modelBuilder.Entity("TodoApi.Models.Author", b =>
                {
                    b.Navigation("Todos");
                });
#pragma warning restore 612, 618
        }
    }
}
